/*************************************************************************************************
-- PROJECT: Brazilian E-commerce SQL Analysis
-- SCRIPT: 01_customer_value_analysis.sql
-- DESCRIPTION: This script quantifies the business impact of customer retention by segmenting
--              customers into two groups ('Repeat' vs. 'Single-Purchase') and calculating
--              the total and average revenue generated by each group.
-- BUSINESS QUESTION:
--    - What is the actual monetary value of a repeat customer compared to a single-purchase customer?
-- METHODOLOGY:
--    1.  [CTE: customer_segments]: First, classifies each unique customer based on their
--        total order count.
--    2.  The final query joins back to the payment and order tables to aggregate revenue
--        for each segment, considering only 'delivered' orders.
-- AUTHOR: Amitesh Kumar Singh
-- DATE: September 10, 2025
*************************************************************************************************/


-- =================================================================================
--                              CONFIGURATION
-- =================================================================================
DECLARE repeat_purchase_threshold INT64 DEFAULT 1;
-- =================================================================================


WITH customer_segments AS (
SELECT
    c.customer_unique_id, 
	CASE
        WHEN count(o.order_id) > repeat_purchase_threshold THEN 'Repeat Customer'
        ELSE 'Single-Purchase Customer'
    END customer_segment
FROM
    e-com-469109.olist_project.customers c
JOIN
    e-com-469109.olist_project.orders o
	    ON c.customer_id = o.customer_id
GROUP BY c.customer_unique_id
)
SELECT
    cs.customer_segment,
    COUNT(DISTINCT cs.customer_unique_id) total_customer,
    ROUND(SUM(p.payment_value),2) total_revenue,
    ROUND(SUM(p.payment_value) / COUNT(DISTINCT cs.customer_unique_id),2) avg_revenue_per_customer
FROM
    customer_segments cs
JOIN
    e-com-469109.olist_project.customers c
USING (customer_unique_id)
JOIN
    e-com-469109.olist_project.orders o
USING (customer_id)
JOIN
    e-com-469109.olist_project.order_payments p
USING (order_id)
WHERE 
    o.order_status = 'delivered'
GROUP BY
    cs.customer_segment;